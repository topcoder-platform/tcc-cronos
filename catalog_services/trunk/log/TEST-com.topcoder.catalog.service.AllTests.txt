Testsuite: com.topcoder.catalog.service.AllTests
Tests run: 337, Failures: 0, Errors: 0, Time elapsed: 103,839 sec
------------- Standard Output ---------------
WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
WARN   warn, SQL Warning: 0, SQLState: 01I01
WARN   warn, Database has transactions
WARN   warn, SQL Warning: 0, SQLState: 01I04
WARN   warn, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: select compuser0_.user_id as user1_4_, compuser0_.component_id as component2_4_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_1_, component0_.component_name as component2_1_, component0_.status_id as status3_1_, component0_.short_desc as short4_1_, component0_.function_desc as function5_1_, component0_.description as descript6_1_, component0_.root_category_id as root7_1_, component0_.current_version as current8_1_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_7_7_, compversio0_.component_id as component2_7_7_, compversio0_.version as version7_7_, compversio0_.version_text as version4_7_7_, compversio0_.phase_id as phase5_7_7_, compversio0_.phase_time as phase6_7_7_, compversio0_.price as price7_7_, compversio0_.comments as comments7_7_, compversio0_.suspended_ind as suspended9_7_7_, component1_.component_id as component1_1_0_, component1_.component_name as component2_1_0_, component1_.status_id as status3_1_0_, component1_.short_desc as short4_1_0_, component1_.function_desc as function5_1_0_, component1_.description as descript6_1_0_, component1_.root_category_id as root7_1_0_, component1_.current_version as current8_1_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_, category3_.category_id as category1_3_2_, category3_.category_name as category2_3_2_, category3_.description as descript3_3_2_, category3_.status_id as status4_3_2_, category3_.viewable as viewable3_2_, category3_.parent_category_id as parent6_3_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula0_2_, compversio4_.comp_vers_id as comp1_7_3_, compversio4_.component_id as component2_7_3_, compversio4_.version as version7_3_, compversio4_.version_text as version4_7_3_, compversio4_.phase_id as phase5_7_3_, compversio4_.phase_time as phase6_7_3_, compversio4_.price as price7_3_, compversio4_.comments as comments7_3_, compversio4_.suspended_ind as suspended9_7_3_, phase5_.phase_id as phase1_11_4_, phase5_.description as descript2_11_4_, compforum6_.jive_category_id as jive1_12_5_, compforum6_.comp_vers_id as comp2_12_5_, complink7_.comp_link_id as comp1_13_6_, complink7_.link as link13_6_, complink7_.comp_vers_id as comp3_13_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_7_3_, versions0_.component_id as component2_7_3_, versions0_.version as version7_3_, versions0_.version_text as version4_7_3_, versions0_.phase_id as phase5_7_3_, versions0_.phase_time as phase6_7_3_, versions0_.price as price7_3_, versions0_.comments as comments7_3_, versions0_.suspended_ind as suspended9_7_3_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_, compforum2_.jive_category_id as jive1_12_1_, compforum2_.comp_vers_id as comp2_12_1_, complink3_.comp_link_id as comp1_13_2_, complink3_.link as link13_2_, complink3_.comp_vers_id as comp3_13_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_5_0_, clients0_.component_id as component2_5_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_4_0_, users0_.component_id as component2_4_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_, category2_.category_id as category1_3_1_, category2_.category_name as category2_3_1_, category2_.description as descript3_3_1_, category2_.status_id as status4_3_1_, category2_.viewable as viewable3_1_, category2_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula0_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_10_0_, technology1_.technology_name as technology2_10_0_, technology1_.description as descript3_10_0_, technology1_.status_id as status4_10_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_9_1_, versiondat0_.phase_id as phase2_9_1_, versiondat0_.comp_vers_id as comp3_9_1_, versiondat0_.posting_date as posting4_9_1_, versiondat0_.initial_submission_date as initial5_9_1_, versiondat0_.winner_announced_date as winner6_9_1_, versiondat0_.final_submission_date as final7_9_1_, versiondat0_.estimated_dev_date as estimated8_9_1_, versiondat0_.price as price9_1_, versiondat0_.total_submissions as total10_9_1_, versiondat0_.status_id as status11_9_1_, versiondat0_.level_id as level12_9_1_, versiondat0_.screening_complete_date as screening13_9_1_, versiondat0_.review_complete_date as review14_9_1_, versiondat0_.aggregation_complete_date as aggrega15_9_1_, versiondat0_.phase_complete_date as phase16_9_1_, versiondat0_.production_date as production17_9_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_9_1_, versiondat0_.phase_complete_date_comment as phase19_9_1_, versiondat0_.review_complete_date_comment as review20_9_1_, versiondat0_.winner_announced_date_comment as winner21_9_1_, versiondat0_.initial_submission_date_comment as initial22_9_1_, versiondat0_.screening_complete_date_comment as screening23_9_1_, versiondat0_.final_submission_date_comment as final24_9_1_, versiondat0_.production_date_comment as production25_9_1_, phase1_.phase_id as phase1_11_0_, phase1_.description as descript2_11_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_3_1_, category0_.category_name as category2_3_1_, category0_.description as descript3_3_1_, category0_.status_id as status4_3_1_, category0_.viewable as viewable3_1_, category0_.parent_category_id as parent6_3_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula0_1_, category1_.category_id as category1_3_0_, category1_.category_name as category2_3_0_, category1_.description as descript3_3_0_, category1_.status_id as status4_3_0_, category1_.viewable as viewable3_0_, category1_.parent_category_id as parent6_3_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula0_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_10_0_, technology0_.technology_name as technology2_10_0_, technology0_.description as descript3_10_0_, technology0_.status_id as status4_10_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
WARN   warn, SQL Warning: 0, SQLState: 01I01
WARN   warn, Database has transactions
WARN   warn, SQL Warning: 0, SQLState: 01I04
WARN   warn, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select compuser0_.user_id as user1_18_, compuser0_.component_id as component2_18_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: select compuser0_.user_id as user1_18_, compuser0_.component_id as component2_18_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select compuser0_.user_id as user1_18_, compuser0_.component_id as component2_18_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: select compuser0_.user_id as user1_18_, compuser0_.component_id as component2_18_ from comp_user compuser0_ where compuser0_.user_id=? and compuser0_.component_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_17_1_, category0_.category_name as category2_17_1_, category0_.description as descript3_17_1_, category0_.status_id as status4_17_1_, category0_.viewable as viewable17_1_, category0_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula1_1_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_24_0_, technology0_.technology_name as technology2_24_0_, technology0_.description as descript3_24_0_, technology0_.status_id as status4_24_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select component0_.component_id as component1_15_, component0_.component_name as component2_15_, component0_.status_id as status3_15_, component0_.short_desc as short4_15_, component0_.function_desc as function5_15_, component0_.description as descript6_15_, component0_.root_category_id as root7_15_, component0_.current_version as current8_15_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_21_7_, compversio0_.component_id as component2_21_7_, compversio0_.version as version21_7_, compversio0_.version_text as version4_21_7_, compversio0_.phase_id as phase5_21_7_, compversio0_.phase_time as phase6_21_7_, compversio0_.price as price21_7_, compversio0_.comments as comments21_7_, compversio0_.suspended_ind as suspended9_21_7_, component1_.component_id as component1_15_0_, component1_.component_name as component2_15_0_, component1_.status_id as status3_15_0_, component1_.short_desc as short4_15_0_, component1_.function_desc as function5_15_0_, component1_.description as descript6_15_0_, component1_.root_category_id as root7_15_0_, component1_.current_version as current8_15_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_, category3_.category_id as category1_17_2_, category3_.category_name as category2_17_2_, category3_.description as descript3_17_2_, category3_.status_id as status4_17_2_, category3_.viewable as viewable17_2_, category3_.parent_category_id as parent6_17_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula1_2_, compversio4_.comp_vers_id as comp1_21_3_, compversio4_.component_id as component2_21_3_, compversio4_.version as version21_3_, compversio4_.version_text as version4_21_3_, compversio4_.phase_id as phase5_21_3_, compversio4_.phase_time as phase6_21_3_, compversio4_.price as price21_3_, compversio4_.comments as comments21_3_, compversio4_.suspended_ind as suspended9_21_3_, phase5_.phase_id as phase1_25_4_, phase5_.description as descript2_25_4_, compforum6_.jive_category_id as jive1_26_5_, compforum6_.comp_vers_id as comp2_26_5_, complink7_.comp_link_id as comp1_27_6_, complink7_.link as link27_6_, complink7_.comp_vers_id as comp3_27_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_21_3_, versions0_.component_id as component2_21_3_, versions0_.version as version21_3_, versions0_.version_text as version4_21_3_, versions0_.phase_id as phase5_21_3_, versions0_.phase_time as phase6_21_3_, versions0_.price as price21_3_, versions0_.comments as comments21_3_, versions0_.suspended_ind as suspended9_21_3_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_, compforum2_.jive_category_id as jive1_26_1_, compforum2_.comp_vers_id as comp2_26_1_, complink3_.comp_link_id as comp1_27_2_, complink3_.link as link27_2_, complink3_.comp_vers_id as comp3_27_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_19_0_, clients0_.component_id as component2_19_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_18_0_, users0_.component_id as component2_18_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_17_0_, category1_.category_name as category2_17_0_, category1_.description as descript3_17_0_, category1_.status_id as status4_17_0_, category1_.viewable as viewable17_0_, category1_.parent_category_id as parent6_17_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula1_0_, category2_.category_id as category1_17_1_, category2_.category_name as category2_17_1_, category2_.description as descript3_17_1_, category2_.status_id as status4_17_1_, category2_.viewable as viewable17_1_, category2_.parent_category_id as parent6_17_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula1_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_24_0_, technology1_.technology_name as technology2_24_0_, technology1_.description as descript3_24_0_, technology1_.status_id as status4_24_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_23_1_, versiondat0_.phase_id as phase2_23_1_, versiondat0_.comp_vers_id as comp3_23_1_, versiondat0_.posting_date as posting4_23_1_, versiondat0_.initial_submission_date as initial5_23_1_, versiondat0_.winner_announced_date as winner6_23_1_, versiondat0_.final_submission_date as final7_23_1_, versiondat0_.estimated_dev_date as estimated8_23_1_, versiondat0_.price as price23_1_, versiondat0_.total_submissions as total10_23_1_, versiondat0_.status_id as status11_23_1_, versiondat0_.level_id as level12_23_1_, versiondat0_.screening_complete_date as screening13_23_1_, versiondat0_.review_complete_date as review14_23_1_, versiondat0_.aggregation_complete_date as aggrega15_23_1_, versiondat0_.phase_complete_date as phase16_23_1_, versiondat0_.production_date as production17_23_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_23_1_, versiondat0_.phase_complete_date_comment as phase19_23_1_, versiondat0_.review_complete_date_comment as review20_23_1_, versiondat0_.winner_announced_date_comment as winner21_23_1_, versiondat0_.initial_submission_date_comment as initial22_23_1_, versiondat0_.screening_complete_date_comment as screening23_23_1_, versiondat0_.final_submission_date_comment as final24_23_1_, versiondat0_.production_date_comment as production25_23_1_, phase1_.phase_id as phase1_25_0_, phase1_.description as descript2_25_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: insert into comp_client (client_id, component_id) values (?, ?)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompUser
WARN   warn, composite-id class does not override equals(): com.topcoder.catalog.entity.CompClient
WARN   warn, composite-id class does not override hashCode(): com.topcoder.catalog.entity.CompClient
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
WARN   warn, SQL Warning: 0, SQLState: 01I01
WARN   warn, Database has transactions
WARN   warn, SQL Warning: 0, SQLState: 01I04
WARN   warn, Database selected
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
Hibernate: insert into catalog (catalog_id, catalog_name) values (1, 'catalog 1')
Hibernate: insert into catalog (catalog_id, catalog_name) values (2, 'catalog 2')
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('1', '1', 1, 1, null, 1)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('2', '2', 2, 1, 1, 2)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('3', '3', 1, 1, 2, 3)
Hibernate: insert into categories (category_name, description, status_id, viewable, parent_category_id, category_id) values ('4', '4', 2, 0, 3, 4)
Hibernate: insert into category_catalog (category_id, catalog_id) values (1, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (2, 2)
Hibernate: insert into category_catalog (category_id, catalog_id) values (3, 1)
Hibernate: insert into category_catalog (category_id, catalog_id) values (4, 2)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (1, 'Java', 'Java 1.5', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (2, 'Informix', 'Informix 10', 1)
Hibernate: insert into technology_types (technology_type_id, technology_name, description, status_id)values (3, 'Hibernate', 'Pure Hibernate', 0)
Hibernate: insert into phase (phase_id, description) values (1, 'Registration')
Hibernate: insert into phase (phase_id, description) values (2, 'Submission')
Hibernate: insert into phase (phase_id, description) values (3, 'Review')
Hibernate: insert into phase (phase_id, description) values (4, 'Final Fix')
Hibernate: insert into phase (phase_id, description) values (111, 'Collaboration')
Hibernate: insert into client (client_id) values (1)
Hibernate: insert into client (client_id) values (2)
Hibernate: insert into client (client_id) values (3)
Hibernate: insert into user_client (client_id, user_id) values (1, 1)
Hibernate: insert into user_client (client_id, user_id) values (1, 2)
Hibernate: insert into user_client (client_id, user_id) values (1, 3)
Hibernate: insert into user_client (client_id, user_id) values (2, 1)
Hibernate: insert into user_client (client_id, user_id) values (3, 2)
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select category0_.category_id as category1_31_1_, category0_.category_name as category2_31_1_, category0_.description as descript3_31_1_, category0_.status_id as status4_31_1_, category0_.viewable as viewable31_1_, category0_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category0_.category_id)
             as formula2_1_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_ from categories category0_ left outer join categories category1_ on category0_.parent_category_id=category1_.category_id where category0_.category_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select technology0_.technology_type_id as technology1_38_0_, technology0_.technology_name as technology2_38_0_, technology0_.description as descript3_38_0_, technology0_.status_id as status4_38_0_ from technology_types technology0_ where technology0_.technology_type_id=?
Hibernate: select component0_.component_id as component1_29_, component0_.component_name as component2_29_, component0_.status_id as status3_29_, component0_.short_desc as short4_29_, component0_.function_desc as function5_29_, component0_.description as descript6_29_, component0_.root_category_id as root7_29_, component0_.current_version as current8_29_ from comp_catalog component0_ where component0_.component_name=?
Hibernate: select compversio0_.comp_vers_id as comp1_35_7_, compversio0_.component_id as component2_35_7_, compversio0_.version as version35_7_, compversio0_.version_text as version4_35_7_, compversio0_.phase_id as phase5_35_7_, compversio0_.phase_time as phase6_35_7_, compversio0_.price as price35_7_, compversio0_.comments as comments35_7_, compversio0_.suspended_ind as suspended9_35_7_, component1_.component_id as component1_29_0_, component1_.component_name as component2_29_0_, component1_.status_id as status3_29_0_, component1_.short_desc as short4_29_0_, component1_.function_desc as function5_29_0_, component1_.description as descript6_29_0_, component1_.root_category_id as root7_29_0_, component1_.current_version as current8_29_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_, category3_.category_id as category1_31_2_, category3_.category_name as category2_31_2_, category3_.description as descript3_31_2_, category3_.status_id as status4_31_2_, category3_.viewable as viewable31_2_, category3_.parent_category_id as parent6_31_2_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category3_.category_id)
             as formula2_2_, compversio4_.comp_vers_id as comp1_35_3_, compversio4_.component_id as component2_35_3_, compversio4_.version as version35_3_, compversio4_.version_text as version4_35_3_, compversio4_.phase_id as phase5_35_3_, compversio4_.phase_time as phase6_35_3_, compversio4_.price as price35_3_, compversio4_.comments as comments35_3_, compversio4_.suspended_ind as suspended9_35_3_, phase5_.phase_id as phase1_39_4_, phase5_.description as descript2_39_4_, compforum6_.jive_category_id as jive1_40_5_, compforum6_.comp_vers_id as comp2_40_5_, complink7_.comp_link_id as comp1_41_6_, complink7_.link as link41_6_, complink7_.comp_vers_id as comp3_41_6_ from comp_versions compversio0_ left outer join comp_catalog component1_ on compversio0_.component_id=component1_.component_id left outer join categories category2_ on component1_.root_category_id=category2_.category_id left outer join categories category3_ on category2_.parent_category_id=category3_.category_id left outer join comp_versions compversio4_ on component1_.current_version=compversio4_.comp_vers_id left outer join phase phase5_ on compversio4_.phase_id=phase5_.phase_id left outer join comp_jive_category_xref compforum6_ on compversio4_.comp_vers_id=compforum6_.comp_vers_id left outer join comp_link complink7_ on compversio4_.comp_vers_id=complink7_.comp_vers_id where compversio0_.comp_vers_id=?
Hibernate: select versions0_.component_id as component2_4_, versions0_.comp_vers_id as comp1_4_, versions0_.version as version4_, versions0_.comp_vers_id as comp1_35_3_, versions0_.component_id as component2_35_3_, versions0_.version as version35_3_, versions0_.version_text as version4_35_3_, versions0_.phase_id as phase5_35_3_, versions0_.phase_time as phase6_35_3_, versions0_.price as price35_3_, versions0_.comments as comments35_3_, versions0_.suspended_ind as suspended9_35_3_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_, compforum2_.jive_category_id as jive1_40_1_, compforum2_.comp_vers_id as comp2_40_1_, complink3_.comp_link_id as comp1_41_2_, complink3_.link as link41_2_, complink3_.comp_vers_id as comp3_41_2_ from comp_versions versions0_ left outer join phase phase1_ on versions0_.phase_id=phase1_.phase_id left outer join comp_jive_category_xref compforum2_ on versions0_.comp_vers_id=compforum2_.comp_vers_id left outer join comp_link complink3_ on versions0_.comp_vers_id=complink3_.comp_vers_id where versions0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: select clients0_.component_id as component2_1_, clients0_.client_id as client1_1_, clients0_.client_id as client1_33_0_, clients0_.component_id as component2_33_0_ from comp_client clients0_ where clients0_.component_id=?
Hibernate: select users0_.component_id as component2_1_, users0_.user_id as user1_1_, users0_.user_id as user1_32_0_, users0_.component_id as component2_32_0_ from comp_user users0_ where users0_.component_id=?
Hibernate: select categories0_.component_id as component1_2_, categories0_.category_id as category2_2_, categories0_.comp_categories_id as comp3_2_, category1_.category_id as category1_31_0_, category1_.category_name as category2_31_0_, category1_.description as descript3_31_0_, category1_.status_id as status4_31_0_, category1_.viewable as viewable31_0_, category1_.parent_category_id as parent6_31_0_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category1_.category_id)
             as formula2_0_, category2_.category_id as category1_31_1_, category2_.category_name as category2_31_1_, category2_.description as descript3_31_1_, category2_.status_id as status4_31_1_, category2_.viewable as viewable31_1_, category2_.parent_category_id as parent6_31_1_, 
                (SELECT A.catalog_name FROM category_catalog B, catalog A
                WHERE B.catalog_id = A.catalog_id AND B.category_id = category2_.category_id)
             as formula2_1_ from comp_categories categories0_ left outer join categories category1_ on categories0_.category_id=category1_.category_id left outer join categories category2_ on category1_.parent_category_id=category2_.category_id where categories0_.component_id=?
Hibernate: select technologi0_.comp_vers_id as comp1_1_, technologi0_.technology_type_id as technology2_1_, technologi0_.comp_tech_id as comp3_1_, technology1_.technology_type_id as technology1_38_0_, technology1_.technology_name as technology2_38_0_, technology1_.description as descript3_38_0_, technology1_.status_id as status4_38_0_ from comp_technology technologi0_ left outer join technology_types technology1_ on technologi0_.technology_type_id=technology1_.technology_type_id where technologi0_.comp_vers_id=?
Hibernate: select versiondat0_.comp_vers_id as comp3_2_, versiondat0_.comp_version_dates_id as comp1_2_, versiondat0_.phase_id as phase2_2_, versiondat0_.comp_version_dates_id as comp1_37_1_, versiondat0_.phase_id as phase2_37_1_, versiondat0_.comp_vers_id as comp3_37_1_, versiondat0_.posting_date as posting4_37_1_, versiondat0_.initial_submission_date as initial5_37_1_, versiondat0_.winner_announced_date as winner6_37_1_, versiondat0_.final_submission_date as final7_37_1_, versiondat0_.estimated_dev_date as estimated8_37_1_, versiondat0_.price as price37_1_, versiondat0_.total_submissions as total10_37_1_, versiondat0_.status_id as status11_37_1_, versiondat0_.level_id as level12_37_1_, versiondat0_.screening_complete_date as screening13_37_1_, versiondat0_.review_complete_date as review14_37_1_, versiondat0_.aggregation_complete_date as aggrega15_37_1_, versiondat0_.phase_complete_date as phase16_37_1_, versiondat0_.production_date as production17_37_1_, versiondat0_.aggregation_complete_date_comment as aggrega18_37_1_, versiondat0_.phase_complete_date_comment as phase19_37_1_, versiondat0_.review_complete_date_comment as review20_37_1_, versiondat0_.winner_announced_date_comment as winner21_37_1_, versiondat0_.initial_submission_date_comment as initial22_37_1_, versiondat0_.screening_complete_date_comment as screening23_37_1_, versiondat0_.final_submission_date_comment as final24_37_1_, versiondat0_.production_date_comment as production25_37_1_, phase1_.phase_id as phase1_39_0_, phase1_.description as descript2_39_0_ from comp_version_dates versiondat0_ left outer join phase phase1_ on versiondat0_.phase_id=phase1_.phase_id where versiondat0_.comp_vers_id=?
Hibernate: delete from comp_jive_category_xref
Hibernate: delete from comp_link
Hibernate: delete from comp_user
Hibernate: delete from comp_technology
Hibernate: delete from comp_version_dates
Hibernate: delete from comp_versions
Hibernate: delete from category_catalog
Hibernate: delete from catalog
Hibernate: delete from comp_categories
Hibernate: delete from comp_catalog
Hibernate: delete from categories
Hibernate: delete from technology_types
Hibernate: delete from client
Hibernate: delete from user_client
Hibernate: delete from comp_client
Hibernate: delete from phase
Hibernate: commit
The test [AssetDTO#setName] run 1000000 times, took time: 40 ms
The test [AssetDTO#setCategories] run 1000000 times, took time: 180 ms
The test [AssetDTO#setDetailedDescription] run 1000000 times, took time: 40 ms
The test [AssetDTO#setForum] run 1000000 times, took time: 41 ms
The test [AssetDTO#setFunctionalDescription] run 1000000 times, took time: 40 ms
The test [AssetDTO#setTechnologies] run 1000000 times, took time: 290 ms
The test [AssetDTO#setVersionNumber] run 1000000 times, took time: 140 ms
The test [AssetDTO#setClientIds] run 1000000 times, took time: 221 ms
The test [AssetDTO#setLink] run 1000000 times, took time: 40 ms
The test [SearchCriteria#getCategories] run 1000000 times, took time: 711 ms
The test [SearchCriteria#getClientId] run 1000000 times, took time: 60 ms
The test [SearchCriteria#getDescription] run 1000000 times, took time: 20 ms
The test [SearchCriteria#getName] run 1000000 times, took time: 20 ms
The test [SearchCriteria#getUserId] run 1000000 times, took time: 80 ms
------------- ---------------- ---------------

Testcase: testConstructorWithMessage took 0,02 sec
Testcase: testConstructorWithMessageCause took 0 sec
Testcase: testConstructorWithMessage took 0 sec
Testcase: testConstructorWithMessageCause took 0 sec
Testcase: testAssetDTO took 0 sec
Testcase: testGetSetId took 0 sec
Testcase: testIdAllowsNull took 0 sec
Testcase: testGetSetCategories took 0 sec
Testcase: testCategoriesAllowsNull took 0 sec
Testcase: testGetSetClientIds took 0 sec
Testcase: testClientIdsAllowsNull took 0 sec
Testcase: testGetSetCurrentVersionAlsoLatestVersion took 0 sec
Testcase: testGetSetDetailedDescription took 0 sec
Testcase: testDetailedDescriptionAllowsNull took 0 sec
Testcase: testGetSetForum took 0 sec
Testcase: testForumAllowsNull took 0 sec
Testcase: testGetSetFunctionalDescription took 0 sec
Testcase: testFunctionalDescriptionAllowsNull took 0 sec
Testcase: testGetSetInformationComplete took 0 sec
Testcase: testGetSetLink took 0 sec
Testcase: testLinkAllowsNull took 0 sec
Testcase: testGetSetName took 0 sec
Testcase: testNameAllowsNull took 0 sec
Testcase: testGetSetProductionDate took 0 sec
Testcase: testProductionDateAllowsNull took 0 sec
Testcase: testGetSetRootCategory took 0 sec
Testcase: testRootCategoryAllowsNull took 0,01 sec
Testcase: testGetSetShortDescription took 0 sec
Testcase: testShortDescriptionAllowsNull took 0 sec
Testcase: testGetSetTechnologies took 0 sec
Testcase: testTechnologiesAllowsNull took 0 sec
Testcase: testGetSetUserIds took 0 sec
Testcase: testUserIdsAllowsNull took 0 sec
Testcase: testGetSetVersionId took 0 sec
Testcase: testVersionIdAllowsNull took 0 sec
Testcase: testGetSetVersionText took 0 sec
Testcase: testVersionTextAllowsNull took 0 sec
Testcase: testGetSetVersionNumber took 0 sec
Testcase: testVersionNumberAllowsNull took 0 sec
Testcase: testSearchCriteria took 0 sec
Testcase: testUserId took 0 sec
Testcase: testClientId took 0 sec
Testcase: testCategories took 0 sec
Testcase: testName took 0 sec
Testcase: testDescription took 0 sec
Testcase: testAllParametersNull took 0 sec
Testcase: testNameIsEmpty took 0 sec
Testcase: testDescriptionIsEmpty took 0 sec
Testcase: testCategoriesIsEmpty took 0 sec
Testcase: testCategoriesContainsNull took 0 sec
Testcase: testCategoriesForNulls took 0 sec
Testcase: testGetPhases took 8,162 sec
Testcase: testGetActiveTechnologies took 0,391 sec
Testcase: testGetActiveCategories took 0,27 sec
Testcase: testGetAssetByIdCurrentVersion took 1,232 sec
Testcase: testGetAssetByIdLatestVersion took 0,641 sec
Testcase: testGetAssetByVersionId took 0,881 sec
Testcase: testCreateAsset took 0,541 sec
Testcase: testCreateAssetClients took 0,46 sec
Testcase: testCreateAssetClientsEmpty took 0,591 sec
Testcase: testCreateAssetUsers took 0,431 sec
Testcase: testCreateAssetUsersEmpty took 0,35 sec
Testcase: testCreateAssetForum took 0,431 sec
Testcase: testCreateAssetLink took 0,351 sec
Testcase: testCreateVersion took 0,761 sec
Testcase: testUpdateAsset took 0,841 sec
Testcase: testUpdateAssetWithoutVersion took 0,891 sec
Testcase: testAssignUserToComponent took 1,182 sec
Testcase: testTwiceAssignUserToAsset took 1,101 sec
Testcase: testRemoveUserFromAsset took 1,072 sec
Testcase: testFindAsset took 2,443 sec
Testcase: testEntityManagerNotInjected took 0,181 sec
Testcase: testGetPhasesJPAFailure took 0,33 sec
Testcase: testGetActiveTechnologiesJPAFailure took 0,19 sec
Testcase: testGetActiveCategoriesJPAFailure took 0,181 sec
Testcase: testGetAssetByNonExistingId took 0,32 sec
Testcase: testGetAssetJPAFailure took 2,494 sec
Testcase: testGetAssetByNonExistingVersionid took 0,19 sec
Testcase: testGetAssetByVersionJPAFailure took 0,621 sec
Testcase: testCreateAssetJPAFailure took 0,25 sec
Testcase: testCreateAssetNonExistingTechnology took 0,201 sec
Testcase: testCreateAssetNonExistingCategory took 0,33 sec
Testcase: testCreateVersionJPAFailure took 1,042 sec
Testcase: testCreateVersionNonExistingAsset took 0,21 sec
Testcase: testUpdateAssetJPAFailure took 0,581 sec
Testcase: testUpdateAssetNonExistingAsset took 0,48 sec
Testcase: testUpdateVersionNonExistingVersion took 0,511 sec
Testcase: testAssignUserToNonExistingAsset took 0,17 sec
Testcase: testAssignUserToComponentJPAFailure took 0,401 sec
Testcase: testRemoveUserFromNonExistingComponent took 0,17 sec
Testcase: testRemoveUserFromNonExistingAssociation took 0,581 sec
Testcase: testRemoveUserFromComponentJPAFailure took 0,811 sec
Testcase: testFindAssetsNullParameter took 0,18 sec
Testcase: testFindAssetsJPAFailure took 0,131 sec
Testcase: testCreateAssetNull took 0,16 sec
Testcase: testCreateAssetIdSet took 0,21 sec
Testcase: testCreateAssetVersionIdSet took 0,19 sec
Testcase: testCreateAssetNameIsNull took 0,201 sec
Testcase: testCreateAssetNameIsEmpty took 0,2 sec
Testcase: testCreateAssetVersionTextIsNull took 0,18 sec
Testcase: testCreateAssetVersionTextIsEmpty took 0,181 sec
Testcase: testCreateAssetShortDescriptionIsNull took 0,2 sec
Testcase: testCreateAssetShortDescriptionIsEmpty took 0,21 sec
Testcase: testCreateAssetDetailedDescriptionIsNull took 0,21 sec
Testcase: testCreateAssetDetailedDescriptionIsEmpty took 0,181 sec
Testcase: testCreateAssetFunctionalDescriptionIsNull took 0,19 sec
Testcase: testCreateAssetFunctionalDescriptionIsEmpty took 0,21 sec
Testcase: testCreateAssetRootCategoryIsNull took 0,201 sec
Testcase: testCreateAssetCategoriesIsNull took 0,22 sec
Testcase: testCreateAssetCategoriesIsEmpty took 0,2 sec
Testcase: testCreateAssetCategoriesContainsNull took 0,18 sec
Testcase: testCreateAssetTechnologiesIsNull took 0,181 sec
Testcase: testCreateAssetTechnologiesIsEmpty took 0,19 sec
Testcase: testCreateAssetTechnologiesContainsNull took 0,28 sec
Testcase: testCreateVersionNull took 0,201 sec
Testcase: testCreateVersionIdSet took 0,37 sec
Testcase: testCreateVersionVersionIdSet took 0,231 sec
Testcase: testCreateVersionNameIsNull took 0,2 sec
Testcase: testCreateVersionNameIsEmpty took 0,2 sec
Testcase: testCreateVersionVersionTextIsNull took 0,26 sec
Testcase: testCreateVersionVersionTextIsEmpty took 0,241 sec
Testcase: testCreateVersionShortDescriptionIsNull took 0,24 sec
Testcase: testCreateVersionShortDescriptionIsEmpty took 0,521 sec
Testcase: testCreateVersionDetailedDescriptionIsNull took 0,611 sec
Testcase: testCreateVersionDetailedDescriptionIsEmpty took 0,18 sec
Testcase: testCreateVersionFunctionalDescriptionIsNull took 0,22 sec
Testcase: testCreateVersionFunctionalDescriptionIsEmpty took 0,221 sec
Testcase: testCreateVersionRootCategoryIsNull took 0,17 sec
Testcase: testCreateVersionCategoriesIsNull took 0,23 sec
Testcase: testCreateVersionCategoriesIsEmpty took 0,16 sec
Testcase: testCreateVersionCategoriesContainsNull took 0,211 sec
Testcase: testCreateVersionTechnologiesIsNull took 0,19 sec
Testcase: testCreateVersionTechnologiesIsEmpty took 0,19 sec
Testcase: testCreateVersionTechnologiesContainsNull took 0,201 sec
Testcase: testUpdateComponentNull took 0,16 sec
Testcase: testUpdateComponentIdNull took 0,901 sec
Testcase: testUpdateComponentVersionIdSet took 0,471 sec
Testcase: testUpdateComponentNameIsNull took 0,691 sec
Testcase: testUpdateComponentNameIsEmpty took 1,362 sec
Testcase: testUpdateComponentVersionTextIsNull took 0,621 sec
Testcase: testUpdateComponentVersionTextIsEmpty took 0,53 sec
Testcase: testUpdateComponentVersionTextIsNullVersionIdToo took 0,551 sec
Testcase: testUpdateComponentVersionTextIsEmptyVersionIdToo took 0,561 sec
Testcase: testUpdateComponentShortDescriptionIsNull took 0,731 sec
Testcase: testUpdateComponentShortDescriptionIsEmpty took 0,791 sec
Testcase: testUpdateComponentDetailedDescriptionIsNull took 0,531 sec
Testcase: testUpdateComponentDetailedDescriptionIsEmpty took 0,561 sec
Testcase: testUpdateComponentFunctionalDescriptionIsNull took 0,501 sec
Testcase: testUpdateComponentFunctionalDescriptionIsEmpty took 0,66 sec
Testcase: testUpdateComponentRootCategoryIsNull took 0,671 sec
Testcase: testUpdateComponentCategoriesIsNull took 0,481 sec
Testcase: testUpdateComponentCategoriesIsEmpty took 0,461 sec
Testcase: testUpdateComponentCategoriesContainsNull took 0,511 sec
Testcase: testUpdateComponentTechnologiesIsNull took 0,61 sec
Testcase: testUpdateComponentTechnologiesIsEmpty took 0,711 sec
Testcase: testUpdateComponentTechnologiesContainsNull took 0,441 sec
Testcase: testUpdateComponentTechnologiesIsNullVersionIdIsNullToo took 0,561 sec
Testcase: testUpdateComponentTechnologiesIsEmptyVersionIdIsNullToo took 0,531 sec
Testcase: testUpdateComponentTechnologiesContainsNullVersionIdIsNullToo took 0,711 sec
Testcase: testCreateNewComponent took 0,28 sec
Testcase: testCreateNewVersion took 0,461 sec
Testcase: testFindAssets took 0,31 sec
Testcase: testCtorAccuracy took 0 sec
Testcase: testGetIdAccuracy took 0 sec
Testcase: testSetIdAccuracy took 0 sec
Testcase: testGetCategoriesAccuracy took 0 sec
Testcase: testSetCategoriesAccuracy took 0 sec
Testcase: testGetClientIdsAccuracy took 0 sec
Testcase: testSetClientIdsAccuracy took 0 sec
Testcase: testIsCurrentVersionAlsoLatestVersionAccuracy took 0 sec
Testcase: testSetCurrentVersionAlsoLatestVersionAccuracy took 0 sec
Testcase: testGetDetailedDescriptionAccuracy took 0 sec
Testcase: testSetDetailedDescriptionAccuracy took 0 sec
Testcase: testGetForumAccuracy took 0 sec
Testcase: testSetForumAccuracy took 0 sec
Testcase: testGetFunctionalDescriptionAccuracy took 0 sec
Testcase: testSetFunctionalDescriptionAccuracy took 0 sec
Testcase: testGetInformationCompleteAccuracy took 0 sec
Testcase: testSetInformationCompleteAccuracy took 0 sec
Testcase: testGetLinkAccuracy took 0 sec
Testcase: testSetLinkAccuracy took 0 sec
Testcase: testGetNameAccuracy took 0 sec
Testcase: testGetSetNameAccuracy took 0 sec
Testcase: testGetProductionDateAccuracy took 0 sec
Testcase: testSetProductionDateAccuracy took 0 sec
Testcase: testGetRootCategoryAccuracy took 0 sec
Testcase: testSetRootCategoryAccuracy took 0 sec
Testcase: testGetShortDescriptionAccuracy took 0 sec
Testcase: testSetShortDescriptionAccuracy took 0 sec
Testcase: testGetTechnologiesAccuracy took 0 sec
Testcase: testSetTechnologiesAccuracy took 0 sec
Testcase: testGetUserIdsAccuracy took 0 sec
Testcase: testSetUserIdsAccuracy took 0 sec
Testcase: testGetVersionIdAccuracy took 0 sec
Testcase: testSetVersionIdAccuracy took 0 sec
Testcase: testGetVersionTextAccuracy took 0 sec
Testcase: testSetVersionTextAccuracy took 0 sec
Testcase: testGetVersionNumberAccuracy took 0 sec
Testcase: testSetVersionNumberAccuracy took 0 sec
Testcase: testGetPhasesAccuracy took 0,801 sec
Testcase: testGetActiveTechnologiesAccuracy took 0,161 sec
Testcase: testGetActiveCategoriesAccuracy took 0,17 sec
Testcase: testGetAssetByIdCurrentVersionAccuracy took 0,531 sec
Testcase: testGetAssetByIdLatestVersionAccuracy took 0,51 sec
Testcase: testGetAssetByVersionIdAccuracy took 0,721 sec
Testcase: testCreateAssetAccuracy took 0,351 sec
Testcase: testCreateAssetClientsAccuracy took 0,45 sec
Testcase: testCreateAssetClientsEmptyAccuracy took 0,321 sec
Testcase: testCreateAssetUsersAccuracy took 0,31 sec
Testcase: testCreateAssetUsersEmptyAccuracy took 0,301 sec
Testcase: testCreateAssetForumAccuracy took 0,28 sec
Testcase: testCreateAssetLinkAccuracy took 0,271 sec
Testcase: testCreateVersionAccuracy took 0,761 sec
Testcase: testUpdateAssetAccuracy took 0,661 sec
Testcase: testAssignUserToComponentAccuracy took 0,5 sec
Testcase: testTwiceAssignUserToAssetAccuracy took 0,561 sec
Testcase: testRemoveUserFromAssetAccuracy took 0,561 sec
Testcase: testFindAssetAccuracy took 1,612 sec
Testcase: testCtor1Accuracy took 0 sec
Testcase: testCtor2Accuracy took 0 sec
Testcase: testCtor1Accuracy took 0 sec
Testcase: testCtor2Accuracy took 0 sec
Testcase: testCtorAccuracy took 0 sec
Testcase: testGetCategoriesAccuracy took 0 sec
Testcase: testGetNameAccuracy took 0 sec
Testcase: testGetUserIdAccuracy took 0 sec
Testcase: testGetClientIdAccuracy took 0 sec
Testcase: testGetDescriptionAccuracy took 0 sec
Testcase: test_CreateAsset_fail_Null took 0,882 sec
Testcase: test_CreateAsset_fail_IdSet took 0,18 sec
Testcase: test_CreateAsset_fail_VersionIdSet took 0,17 sec
Testcase: test_CreateAsset_fail_NameNull took 0,22 sec
Testcase: test_CreateAsset_fail_NameIsEmpty took 0,191 sec
Testcase: test_CreateAsset_fail_VersionTextIsNull took 0,16 sec
Testcase: test_CreateAsset_fail_VersionTextIsEmpty took 0,21 sec
Testcase: test_CreateAsset_fail_ShortDescriptionIsNull took 0,19 sec
Testcase: test_CreateAsset_fail_ShortDescriptionIsEmpty took 0,241 sec
Testcase: test_CreateAsset_fail_DetailedDescriptionIsNull took 0,23 sec
Testcase: test_CreateAsset_fail_DetailedDescriptionIsEmpty took 0,18 sec
Testcase: test_CreateAsset_fail_FunctionalDescriptionIsNull took 0,551 sec
Testcase: test_CreateAsset_fail_FunctionalDescriptionIsEmpty took 0,211 sec
Testcase: test_CreateAsset_fail_RootCategoryIsNull took 0,29 sec
Testcase: test_CreateAsset_fail_CategoriesIsNull took 0,18 sec
Testcase: test_CreateAsset_fail_CategoriesIsEmpty took 0,2 sec
Testcase: test_CreateAsset_fail_CategoriesContainsNull took 0,191 sec
Testcase: test_CreateAsset_fail_TechnologiesIsNull took 0,22 sec
Testcase: test_CreateAsset_fail_TechnologiesIsEmpty took 0,19 sec
Testcase: test_CreateAsset_fail_TechnologiesContainsNull took 0,191 sec
Testcase: test_CreateVersion_fail_Null took 0,16 sec
Testcase: test_CreateVersion_fail_IdSet took 0,18 sec
Testcase: test_CreateVersion_fail_VersionIdSet took 0,21 sec
Testcase: test_CreateVersion_fail_NameIsNull took 0,231 sec
Testcase: test_CreateVersion_fail_NameIsEmpty took 0,35 sec
Testcase: test_CreateVersion_fail_VersionTextIsNull took 0,291 sec
Testcase: test_CreateVersion_fail_VersionTextIsEmpty took 0,2 sec
Testcase: test_CreateVersion_fail_ShortDescriptionIsNull took 0,27 sec
Testcase: test_CreateVersion_fail_ShortDescriptionIsEmpty took 0,181 sec
Testcase: test_CreateVersion_fail_DetailedDescriptionIsNull took 0,47 sec
Testcase: test_CreateVersion_fail_DetailedDescriptionIsEmpty took 0,221 sec
Testcase: test_CreateVersion_fail_FunctionalDescriptionIsNull took 0,2 sec
Testcase: test_CreateVersion_fail_FunctionalDescriptionIsEmpty took 0,18 sec
Testcase: test_CreateVersion_fail_RootCategoryIsNull took 0,461 sec
Testcase: test_CreateVersion_fail_CategoriesIsNull took 0,23 sec
Testcase: test_CreateVersion_fail_CategoriesIsEmpty took 0,22 sec
Testcase: test_CreateVersion_fail_CategoriesContainsNull took 0,251 sec
Testcase: test_CreateVersion_fail_TechnologiesIsNull took 0,38 sec
Testcase: test_CreateVersion_fail_TechnologiesIsEmpty took 0,281 sec
Testcase: test_CreateVersion_fail_TechnologiesContainsNull took 0,19 sec
Testcase: test_updateAsset_fail_Null took 0,16 sec
Testcase: test_updateAsset_fail_IdNull took 1,082 sec
Testcase: test_updateAsset_fail_NameIsNull took 0,651 sec
Testcase: test_updateAsset_fail_NameIsEmpty took 1,402 sec
Testcase: test_updateAsset_fail_ShortDescriptionIsNull took 1,101 sec
Testcase: test_updateAsset_fail_ShortDescriptionIsEmpty took 0,721 sec
Testcase: test_updateAsset_fail_DetailedDescriptionIsNull took 0,671 sec
Testcase: test_updateAsset_fail_DetailedDescriptionIsEmpty took 0,882 sec
Testcase: test_updateAsset_fail_FunctionalDescriptionIsNull took 0,55 sec
Testcase: test_updateAsset_fail_FunctionalDescriptionIsEmpty took 0,621 sec
Testcase: test_updateAsset_fail_RootCategoryIsNull took 0,631 sec
Testcase: test_updateAsset_fail_CategoriesIsNull took 0,631 sec
Testcase: test_updateAsset_fail_CategoriesIsEmpty took 0,461 sec
Testcase: test_updateAsset_fail_CategoriesContainsNull took 0,581 sec
Testcase: test_updateAsset_fail_TechnologiesIsNull took 0,811 sec
Testcase: test_updateAsset_fail_TechnologiesIsEmpty took 0,611 sec
Testcase: test_updateAsset_fail_TechnologiesContainsNull took 0,541 sec
Testcase: test_GetActiveCategories_fail_EntityManagerNotInjected took 0,19 sec
Testcase: test_GetActiveCategories_fail_Cause_PE took 0,15 sec
Testcase: test_GetActiveCategories_fail_Cause_IAE took 0,17 sec
Testcase: test_getActiveTechnologies_fail_Cause_PE took 0,14 sec
Testcase: test_getActiveTechnologies_fail_Cause_IAE took 0,221 sec
Testcase: test_getPhases_fail_Cause_PE took 0,14 sec
Testcase: test_getPhases_fail_Cause_IAE took 0,15 sec
Testcase: test_getAssetById_fail_NonExistingId took 0,22 sec
Testcase: test_getAssetById_fail_cause_PE took 0,531 sec
Testcase: test_getAssetById_fail_cause_IAE took 0,531 sec
Testcase: test_getAssetByVersionId_fail_NonExistingVersionid took 0,16 sec
Testcase: test_getAssetByVersionId_fail_cause_PE took 0,471 sec
Testcase: test_getAssetByVersionId_fail_cause_IAE took 0,521 sec
Testcase: test_createAsset_fail_cause_PE took 0,2 sec
Testcase: test_createAsset_fail_cause_IAE took 0,16 sec
Testcase: test_CreateAsset_NonExistingTechnology took 0,2 sec
Testcase: test_CreateAsset_NonExistingCategory took 0,231 sec
Testcase: test_CreateVersion_fail_cause_PE took 0,2 sec
Testcase: test_CreateVersion_fail_cause_IAE took 0,321 sec
Testcase: test_CreateVersion_fail_NonExistingAsset took 0,13 sec
Testcase: test_UpdateAsset_fail_cause_PE took 0,531 sec
Testcase: test_UpdateAsset_fail_cause_IAE took 0,55 sec
Testcase: test_UpdateAsset_fail_NonExistingAsset took 0,501 sec
Testcase: test_FindAssets_fail_NullParameter took 0,15 sec
Testcase: test_FindAssets_fail_cause_PE took 0,221 sec
Testcase: test_FindAssets_fail_cause_IAE took 0,16 sec
Testcase: test_assignUserToAsset_fail_NonExistingAsset took 0,16 sec
Testcase: test_assignUserToAsset_fail_cause_PE took 0,431 sec
Testcase: test_assignUserToAsset_fail_cause_IAE took 0,41 sec
Testcase: test_removeUserFromAsset_fail_NonExistingComponent took 0,16 sec
Testcase: test_removeUserFromAsset_NonExistingAssociation took 0,772 sec
Testcase: test_removeUserFromAsset_fail_cause_PE took 0,54 sec
Testcase: test_removeUserFromAsset_fail_cause_IAE took 0,531 sec
Testcase: test_ctor_fail_AllParametersNull took 0 sec
Testcase: test_ctor_fail_NameEmpty took 0 sec
Testcase: test_ctor_fail_DescriptionEmpty took 0 sec
Testcase: test_ctor_fail_CategoriesEmpty took 0 sec
Testcase: test_ctor_fail_CategoriesContainsNull took 0 sec
Testcase: testSetName took 0,04 sec
Testcase: testSetCategories took 0,18 sec
Testcase: testSetDetailedDescription took 0,04 sec
Testcase: testSetForum took 0,041 sec
Testcase: testSetFunctionalDescription took 0,04 sec
Testcase: testSetTechnologies took 0,29 sec
Testcase: testSetVersionNumber took 0,14 sec
Testcase: testSetClientIds took 0,221 sec
Testcase: testSetLink took 0,04 sec
Testcase: testGetCategories took 0,711 sec
Testcase: testGetClientId took 0,06 sec
Testcase: testGetDescription took 0,02 sec
Testcase: testGetName took 0,02 sec
Testcase: testGetUserId took 0,08 sec
