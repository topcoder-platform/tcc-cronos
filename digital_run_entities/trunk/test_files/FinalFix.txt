Before running the test

1) Run id_sequences.sql and DRSchema.ddl
2) Edit the DB credentials in the files hibernate.cfg.xml and DBConnectionFactoryImpl.xml

Final Fixes
-----------
1) In the ormapping file, please add not-null="false|true" for all the <property> according to the db schema.
Fixed. However not-null is not required for columns which have default value set in the DB. So createDate and
modifyDate don't require this attribute.

2) For many-to-one/many-to-many/one-to-one of DigitalRunPoints/Track, please add a. not-null, b. cascade c. lazy or not
a) Fixed the many-to-one with not-null="true" which holds the foreign key. 
b) Cascade set to refresh, which can be updated in the config if required 
c) lazy=true for digitalRunPoints, rest its eager as per the forum

3) The issue regarding the empty collections is still unresolved in the forum, designer is yet to aprove it.
   Please get the confirmation from the designer during the final fixes phase. Not marking down giving consideration
   to the duration of the component.
Got a confirmation from designer for this. Please see the forum

4) Demo.java: Line 33. There is an additional empty statement. Chck the double semi-colon "private static EntityManager manager;;"
Fixed

5)  BaseEntity.java line 155 can reduce to "return id > 0 && id == entity.id;" i think it is much efficient. 
Fixed

6) You should always use parenthesis in conditional expressions, in your submission you have missed out at quite some places.
Fixed

7) Section 2 Environment Requirements requires update. Several TCS components and Hibernate as 3rd party component. 

Other TCS components are required by ID Generator which can be obtained from the CS of IDGenerator. This component is not
directly dependent on them.

I updated the third party component section and is highlighted in Red. Please change it to black before commiting.

8) Dependencies configuration requires update with information regarding configuration for the component.
Fixed. Please see section 3.3

9) when test for a attribute, you'd better test the getter and the setter separately.
also test for the collection, you need to test it is a shallow copy, not the directly return ones.
but you just test the size of the collection. it is not enough. you need to test the element in the
element. though it is simple, but you can do better. 

For the setter/getter comment - I am not taking this comment since it is not required.
For the shallow copy and collection check - Fixed. See the tests. test_accuracy_setProjectTypes, test_accuracy_setDigitalRunPoints and
test_accuracy_setTrackContests

10) for testTrack in persistenceTests, please give tests with the collections inside the Track class. and test cases for lazy,
    or cascade for the many-to-one/many-to-many mappings
    Fixed. Combined test case with track and collections are provided in testTrackContest and testDigitalRunPoints in PersistenceTests.
    Cascade is given as REFRESH.

11) please give failure persistence test cases for example, required field is not present. 

A failure persistence test class is newly added.
       