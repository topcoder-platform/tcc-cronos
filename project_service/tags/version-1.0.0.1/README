TO RUN:

1. Install the component structure in ${basedir}

2. Create "topcoder_global.properties" in ${basedir}/.. and add the properties from steps 2,3,4

3. The following standard build script properties must be set
	ext_libdir - root of third party libraries
	tcs_libdir - root of topcoder components
	cronos_libdir - root of cronos components
	java_1_5_bootclasspath - installation path for java 1.5 (only needed for compile_targets task)
	jboss_home - root of JBoss 4.2.2 installation.
	jboss_config_name - the name for the jboss configuration (default)

4. The following standard build script properties can be changed (defaults are noted)
	debug=off - as expected
	verbose=no - as expected
	cobertura.dir=${ext_libdir}/cobertura/1.8
		installation directory of cobertura script expects {$cobertura.dir}/cobertura.jar
		and {$cobertura.dir}/lib/containg Jars for asm, jakarta, and log4j to run cobertura task

5. The following properties need to be set for this component
	None

NB:
	The folder ${basedir}/test_reflib contains TopCoder components 
	that are required by this component's test code. This component is
	used to by compile_test and test targets. Components are listed under
	the following directory structure "component name"/"component version".
	Components are provided AS IS for development purposes only.

	Included:
Authentication Factory 2.0
Authentication Manager 1.0.3
Configuration API 1.0.0
Configuration Manager 2.1.5
Configuration Persistence 1.0.0
Data Entitlement 1.1.4
DB Connection Factory 1.1
Object Factory 2.0.1
Object Factory Configuration API Plugin 1.0.0



Setup
------------------------------------------------------
Database

1. install Informix and make sure the database is started.
2. create a database named 'project' in Informix.
3. use 'dbaccess project <path>/test_files/create.sql' to create database. it will create tables and sequences. Note, you can use 'dbaccess project <path>/test_files/drop.sql' to drop tables and sequences.
4. change the ip address and port and username and password in test_files/informix-ds.xml and test_files/InformixDBConnectionFactory.xml and test_files/META-INF/hibernate.cfg.xml.

Here, database is ready.

JBoss

1. Download and install JBoss 4.2.2.
2. modify <jboss-home\server\default\conf\login-config.xml, adding

   <application-policy name="JBossLoginModule">
	    <authentication>
	      <login-module code="com.topcoder.security.auth.module.JBossLoginModule"
	        flag="required">
	        <module-option name="fileName">D:/Review/Project_Service/test_files/demoConfigs.properties</module-option>
	        <module-option name="password-stacking">useFirstPass</module-option>
	      </login-module>
	    </authentication>
  </application-policy>
  
  
  Notes, fileName property should be point to test_files/demoConfigs.properties file.

3. change demoConfigs.properties, using the correct path for JBossLoginModule.xml.

Build.xml

1. there are some settings need to be adjusted according to your environment.
like
1.1 "configuration for checkstyles"
1.2 "codertura task definitation"
1.3 <property name="jboss_home" value="E:/TC_Hermes_Jboss_Upgrade_4.2.2GA" />
1.4 See build.xml for required tcs jars and third party jars

Now, all the setup is ready. Let's start.

1. start Jboss 4.2.2
2. use 'ant deployEAR', to package ear file and deploy to jboss, a latest built is alredy saved as test_files/project_service.ear.
3. use 'ant test' to run the test cases.
4. 'ant undeployEAR' is used to delete the ear file in JBoss. and 'ant package.ejb' is used to package the ejb jar.

This is the most simplified process I can offer you:)

Other Notes
------------------------------------------------------------------------

1. About the coverage report, there are some issue with using codertura with jboss. So the coverage report is incorrect. I covered all the case for testing.
