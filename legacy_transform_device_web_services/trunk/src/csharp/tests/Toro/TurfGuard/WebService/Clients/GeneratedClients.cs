#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Toro.TurfGuard.WebService.Clients
{
    using System.Runtime.Serialization;
            
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Toro.TurfGuard.WebService.Clients.IDeviceService")]
    public interface IDeviceService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/AddDevice", ReplyAction="http://tempuri.org/IDeviceService/AddDeviceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TopCoder.Services.WCF.TCFaultException), Action="http://tempuri.org/IDeviceService/AddDeviceTCFaultExceptionFault", Name="TCFaultException", Namespace="http://schemas.datacontract.org/2004/07/TopCoder.Services.WCF")]
        void AddDevice(string username, string password, int siteID, string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/UpdateDevice", ReplyAction="http://tempuri.org/IDeviceService/UpdateDeviceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TopCoder.Services.WCF.TCFaultException), Action="http://tempuri.org/IDeviceService/UpdateDeviceTCFaultExceptionFault", Name="TCFaultException", Namespace="http://schemas.datacontract.org/2004/07/TopCoder.Services.WCF")]
        void UpdateDevice(string username, string password, int siteID, string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetAllDevices", ReplyAction="http://tempuri.org/IDeviceService/GetAllDevicesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TopCoder.Services.WCF.TCFaultException), Action="http://tempuri.org/IDeviceService/GetAllDevicesTCFaultExceptionFault", Name="TCFaultException", Namespace="http://schemas.datacontract.org/2004/07/TopCoder.Services.WCF")]
        string GetAllDevices(string username, string password, int siteID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/AddDeviceGroup", ReplyAction="http://tempuri.org/IDeviceService/AddDeviceGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TopCoder.Services.WCF.TCFaultException), Action="http://tempuri.org/IDeviceService/AddDeviceGroupTCFaultExceptionFault", Name="TCFaultException", Namespace="http://schemas.datacontract.org/2004/07/TopCoder.Services.WCF")]
        void AddDeviceGroup(string username, string password, int siteID, string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/UpdateDeviceGroup", ReplyAction="http://tempuri.org/IDeviceService/UpdateDeviceGroupResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TopCoder.Services.WCF.TCFaultException), Action="http://tempuri.org/IDeviceService/UpdateDeviceGroupTCFaultExceptionFault", Name="TCFaultException", Namespace="http://schemas.datacontract.org/2004/07/TopCoder.Services.WCF")]
        void UpdateDeviceGroup(string username, string password, int siteID, string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetAllDeviceGroups", ReplyAction="http://tempuri.org/IDeviceService/GetAllDeviceGroupsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TopCoder.Services.WCF.TCFaultException), Action="http://tempuri.org/IDeviceService/GetAllDeviceGroupsTCFaultExceptionFault", Name="TCFaultException", Namespace="http://schemas.datacontract.org/2004/07/TopCoder.Services.WCF")]
        string GetAllDeviceGroups(string username, string password, int siteID, int deviceGroupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceService/GetDeviceReading", ReplyAction="http://tempuri.org/IDeviceService/GetDeviceReadingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(TopCoder.Services.WCF.TCFaultException), Action="http://tempuri.org/IDeviceService/GetDeviceReadingTCFaultExceptionFault", Name="TCFaultException", Namespace="http://schemas.datacontract.org/2004/07/TopCoder.Services.WCF")]
        string GetDeviceReading(string username, string password, int siteID, string input, int readingDepth, System.DateTime startDate, System.DateTime endDate, string scale);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IDeviceServiceChannel : Toro.TurfGuard.WebService.Clients.IDeviceService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [CoverageExclude]
    public partial class DeviceServiceClient : System.ServiceModel.ClientBase<Toro.TurfGuard.WebService.Clients.IDeviceService>, Toro.TurfGuard.WebService.Clients.IDeviceService
    {
        
        public DeviceServiceClient()
        {
        }
        
        public DeviceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public DeviceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public DeviceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public DeviceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public void AddDevice(string username, string password, int siteID, string input)
        {
            base.Channel.AddDevice(username, password, siteID, input);
        }
        
        public void UpdateDevice(string username, string password, int siteID, string input)
        {
            base.Channel.UpdateDevice(username, password, siteID, input);
        }
        
        public string GetAllDevices(string username, string password, int siteID)
        {
            return base.Channel.GetAllDevices(username, password, siteID);
        }
        
        public void AddDeviceGroup(string username, string password, int siteID, string input)
        {
            base.Channel.AddDeviceGroup(username, password, siteID, input);
        }
        
        public void UpdateDeviceGroup(string username, string password, int siteID, string input)
        {
            base.Channel.UpdateDeviceGroup(username, password, siteID, input);
        }
        
        public string GetAllDeviceGroups(string username, string password, int siteID, int deviceGroupType)
        {
            return base.Channel.GetAllDeviceGroups(username, password, siteID, deviceGroupType);
        }
        
        public string GetDeviceReading(string username, string password, int siteID, string input, int readingDepth, System.DateTime startDate, System.DateTime endDate, string scale)
        {
            return base.Channel.GetDeviceReading(username, password, siteID, input, readingDepth, startDate, endDate, scale);
        }
    }
}
