/*
 * Copyright (C) 2007 TopCoder Inc., All Rights Reserved.
 */
package com.topcoder.timetracker.company;

import com.topcoder.util.errorhandling.BaseRuntimeException;


/**
 * <p>
 * This exception will be thrown by the dao's constructor when the id generator will generate non-positive ids.
 * </p>
 *
 * <p>
 * <b>Thread Safety: </b>This class is thread safe by being immutable.
 * </p>
 *
 * @author bramandia, argolite, TCSDEVELOPER
 * @version 3.2
 */
public class InvalidIdException extends BaseRuntimeException {
    /** Represents the invalid id generated by the id generator. */
    private long invalidId;

    /**
     * <p>
     * Creates a new instance of <code>InvalidIdException</code> class with a detail error message and the invalid id.
     * </p>
     *
     * @param message a detail error message describing the error.
     * @param invalidId the invalid id generated by the id generator.
     */
    public InvalidIdException(String message, long invalidId) {
        super(message);
        this.invalidId = invalidId;
    }

    /**
     * <p>
     * Creates a new instance of <code>InvalidIdException</code> class with a detail error message, the original
     * exception causing the error and the invalid id.
     * </p>
     *
     * @param message a detail error message describing the error.
     * @param invalidId the invalid id generated by the id generator.
     * @param cause an exception representing the cause of the error.
     */
    public InvalidIdException(String message, long invalidId, Throwable cause) {
        super(message, cause);
        this.invalidId = invalidId;
    }

    /**
     * <p>
     * Gets the invalid id generated by the id generator.
     * </p>
     *
     * @return the invalid id generated by the id generator.
     */
    public long getInvalidId() {
        return this.invalidId;
    }
}
