<project name="Override Macrodef Standard Behaviour Import" basedir=".">
    <!-- macrodef override definition in order to change the standard behaviour from
         build.xml/build_dist.xml
     -->
    <macrodef name="test.execute">
        <!-- standard test task -->
        <sequential>
            <mkdir dir="${testlogdir}"/>
            <junit fork="true" haltonerror="false" maxmemory="256m">
                <classpath location="${build_testclassdir}"/>
                <classpath refid="test.build.classpath"/>
                <test name="${package}.AllTests" todir="${testlogdir}">
                    <formatter type="plain" usefile="true"/>
                    <formatter type="xml" usefile="true"/>
                </test>
            </junit>
        </sequential>
    </macrodef>
	
    <macrodef name="coveragetest.execute">
        <!-- standard test task -->
        <sequential>
            <mkdir dir="${testlogdir}"/>
            <mkdir dir="${instrumented.dir}"/>
            <delete file="${cobertura.datafile}"/>
            <cobertura-instrument todir="${instrumented.dir}" datafile="${cobertura.datafile}">
                <!-- all included -->
                <fileset dir="${build_classdir}">
                    <include name="**/*.class"/>
                </fileset>
            </cobertura-instrument>
            <junit fork="true" haltonerror="false" maxmemory="256m">
                <sysproperty key="net.sourceforge.cobertura.datafile" file="${cobertura.datafile}"/>
                <classpath location="${instrumented.dir}"/>
                <classpath location="${build_testclassdir}"/>
                <classpath refid="test.build.classpath"/>
                <classpath refid="cobertura.classpath"/>
                <test name="${package}.AllTests" todir="${testlogdir}">
                    <formatter type="plain" usefile="true"/>
                    <formatter type="xml" usefile="true"/>
                </test>
            </junit>
        </sequential>
    </macrodef>
	
    <property name="cobertura.datafile.remote" value="${jboss.dir}/bin/cobertura.ser"/>
    <property name="cobertura.datafile.local" value="${testlogdir}/cobertura_local.ser"/>

    <property name="component.ejb.dir" value="${build_distdir}/ejb"/>
    <property name="component.ejb.jar" value="${component.ejb.dir}/${distfilename}.jar"/>
    <property name="component.ear.dir" value="${build_distdir}/ear"/>
    <property name="component.ear" value="${component.ear.dir}/${distfilename}.ear"/>
    <target name="package_ejb" depends="compile,compile_tests">
        <delete dir="${build_classdir}/META-INF"/>
        <delete dir="${component.ejb.dir}" failonerror="false"/>
        <delete dir="${instrumented.dir}"/>

        <mkdir dir="${component.ejb.dir}"/>
        <copy todir="${instrumented.dir}/META-INF">
            <fileset dir="${testfiles}/ejb"/>
        </copy>

        <delete file="${cobertura.datafile}"/>
        <copy todir="${instrumented.dir}">
            <fileset dir="${build_classdir}"/>
        </copy>
        <copy todir="${instrumented.dir}">
            <fileset dir="${build_testclassdir}"/>
        </copy>
        <jar basedir="${instrumented.dir}" destfile="${component.ejb.jar}"/>	
    </target>


    <target name="deploy_ear" depends="package_ejb">
        <delete dir="${component.ear.dir}" failonerror="false"/>
        <mkdir dir="${component.ear.dir}"/>

        <copy todir="${component.ear.dir}" overwrite="true">
            <fileset dir="${testfiles}/ear"/>
        </copy>

        <copy file="${component.ejb.jar}" todir="${component.ear.dir}" overwrite="true"/>
        <copy file="${logging_wrapper.jar}" todir="${component.ear.dir}" overwrite="true" />
        <copy file="${base_exception.jar}" todir="${component.ear.dir}" overwrite="true" />
        <copy file="${configuration_api.jar}" todir="${component.ear.dir}" overwrite="true" />
        <copy file="${configuration_persistence.jar}" todir="${component.ear.dir}" overwrite="true" />
        <copy file="${object_factory.jar}" todir="${component.ear.dir}" overwrite="true" />
        <copy file="${object_factory_configuration_api_plugin.jar}" todir="${component.ear.dir}" overwrite="true" />
        <copy file="${object_formatter.jar}" todir="${component.ear.dir}" overwrite="true" />
        <copy file="${jira_management.jar}" todir="${component.ear.dir}" overwrite="true" />
        <copy file="${test_reflib}/typesafe_enum/1.1.0/typesafe_enum.jar" todir="${component.ear.dir}" overwrite="true" />

        <ear earfile="${component.ear}" basedir="${component.ear.dir}" appxml="${testfiles}/ear/application.xml"/>
        <copy file="${component.ear}" todir="${jboss.dir}/server/default/deploy"/>
		
        <copy file="${testfiles}/accuracy/${distfilename}_accuracy.ear" todir="${jboss.dir}/server/default/deploy"/>		
    </target>

    <target name="undeploy_ear">
        <delete file="${jboss.dir}/server/default/deploy/${distfilename}.ear" failonerror="true"/>
        <delete file="${jboss.dir}/server/default/deploy/${distfilename}_accuracy.ear" failonerror="true"/>
    </target>

    <target name="shutdown_jboss">
        <exec command="${jboss.dir}/bin/shutdown.bat -S"/>
    </target>
    <target name="run_jboss" depends="undeploy_ear">
        <exec command="${jboss.dir}/bin/run.bat -Djboss.shutdown.forceHalt=false"/>
    </target>	
</project>
