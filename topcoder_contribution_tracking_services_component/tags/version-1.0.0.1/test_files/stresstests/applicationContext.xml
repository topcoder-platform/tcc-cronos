<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" 
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"	
	xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	
	
<!--Bean to load properties file -->  
<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">    
<property name="location" value="classpath:stresstests/stresstest.properties" />   
</bean>

<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
		
</bean>

<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="mappingLocations">      
        <value>${mapping_location}</value>      
    </property>
    <property name="hibernateProperties">
      <value>
        dialect=org.hibernate.dialect.InformixDialect	
		show_sql=true
      </value>
    </property>
  </bean>

 <bean id="projectContestCPConfigService" class="com.topcoder.utilities.cp.services.impl.ProjectContestCPConfigServiceImpl" init-method="checkInit">
  <property name="loggerName" value="logger"/>
  <property name="sessionFactory" ref="sessionFactory"/>
</bean>

 <bean id="directProjectCPConfigService" class="com.topcoder.utilities.cp.services.impl.DirectProjectCPConfigServiceImpl" init-method="checkInit">
  <property name="loggerName" value="logger"/>
  <property name="sessionFactory" ref="sessionFactory"/>
</bean>

<bean id="memberContributionPointsService" class="com.topcoder.utilities.cp.services.impl.MemberContributionPointsServiceImpl" init-method="checkInit">
  <property name="loggerName" value="logger"/>
  <property name="sessionFactory" ref="sessionFactory"/>
</bean>
  
<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
  <property name="sessionFactory" ref="sessionFactory" />
</bean>


<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
  <tx:advice id="txAdvice" transaction-manager="txManager">
  <!-- the transactional semantics... -->
  <tx:attributes>
    <!-- all methods starting with 'get' are read-only -->
    <tx:method name="get*" read-only="true"/>
    <!-- other methods use the default transaction settings  -->
    <tx:method name="*" />
  </tx:attributes>
  </tx:advice>
  
  <!-- ensure that the above transactional advice runs for any execution
    of an operation defined by the service implementation interface -->
  <aop:config>
  <aop:pointcut id="serviceOperation" expression="execution(* com.topcoder.utilities.cp.services.impl.*.*(..))"/>
  <aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation"/>
  </aop:config> 


<!-- enable the configuration of transactional behavior based on annotations -->
 <tx:annotation-driven transaction-manager="txManager"/>
 

  
</beans>