This readme file explains how to setup and build this component.
(See: http://www.topcoder.com/wiki/display/tc/Java+Component+Build+Process for an explanation of the build process used.)

1. Install the component structure in ${basedir}

2. Create "topcoder_global.properties" in ${basedir}/.. and add the properties from steps 2,3,4,5

3. The following standard build script properties must be set
	ext_libdir - root of third party libraries
	tcs_libdir - root of topcoder components
	cronos_libdir - root of cronos components    
	java_1_4_bootclasspath - installation path for java 1.4 (only needed for compile_targets task)
	java_1_5_bootclasspath - installation path for java 1.5 (only needed for compile_targets task)

4. The following standard build script properties can be changed (defaults are noted)
	debug=off - as expected
	verbose=no - as expected
	cobertura.dir=${ext_libdir}/cobertura/1.9
		installation directory of cobertura script expects {$cobertura.dir}/cobertura.jar
		and {$cobertura.dir}/lib/containg Jars for asm, jakarta, and log4j to run cobertura task

5. The following properties need to be set for this component:
	[List the any specialized configuration needed]
	${jboss_home} - points to the path of jboss server installation.
    ${jboss_config_name} - the jboss server config name. 

6. The following third party libraries need to have their location specified - by default the build-dependencies.xml file looks for these under ${ext_libdir}, if you follow the setup listed in that file, you will not need to add these to global:
	[List the third party libraries here as their property name, include comment of version to use]
	${javaee.jar}
	${jdbc.informix.jar}

7. Ant Commands:
	ant clean - removes temporary build files
	ant compile - builds the production code
	ant compile_tests - builds the test code
	ant test - runs the test code
	ant reports-all - generates javadoc and code coverage reports
	ant deploy-lib - moves the component runtime jar to the location where other components will look for it.

NB:
	The folder ${basedir}/test_reflib contains TopCoder components 
	that are required by this component's test code. This component is
	used to by compile_test and test targets. Components are listed under
	the following directory structure "component name"/"component version".
	Components are provided AS IS for development purposes only.

	Included:
		[List the contents of ${basedir}/test_reflib here - if needed explain how to build/access those contents]
		class_associations/1.0.0/class_associations.jar
		data_validation/1.1.1/data_validation.jar
		object_factory_config_manager_plugin/1.0.0/object_factory_config_manager_plugin.jar
		typesafe_enum/1.1.0/typesafe_enum.jar

Setup for tests:
1) Prepare the database by executing test_files/Schema.sql
2) Modify the connection strings in test_files/hibernate.cfg.xml and test_files/META-INF/informix-ds.xml
3) Install and start JBoss AS.
4) Run ant test.setup to deploy the component into JBoss container.
5) Run ant test